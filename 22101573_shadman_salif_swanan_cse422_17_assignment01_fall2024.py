# -*- coding: utf-8 -*-
"""22101573_Shadman Salif Swanan_CSE422_17_Assignment01_Fall2024.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qLYBhLaLv86oUetWA4MBAqtAEx1vKYP4
"""

input_file = "input.txt"
output_file = "output.txt"
start_node = input("Start node: ")
end_node = input("Destination: ")

heuristics = {}
graph = {}

f = open(input_file, "r")
lines = f.readlines()
for line in lines:
    parts = line.split()
    city = parts[0]
    heuristic = int(parts[1])
    heuristics[city] = heuristic
    neighbors = [(parts[i], int(parts[i + 1])) for i in range(2, len(parts), 2)]
    graph[city] = neighbors
f.close()

initial = [(0 + heuristics[start_node], start_node, [start_node], 0)]
#find path
path = None
distance = None
while len(initial) > 0:
    initial.sort()
    estimated_cost, current_city, current_path, path_cost = initial.pop(0)

    if current_city == end_node:
        path = current_path
        distance = path_cost
        break

    for neighbor, dist in graph.get(current_city, []):
        new_cost = path_cost + dist
        estimated_total_cost = new_cost + heuristics.get(neighbor, float('inf'))
        initial.append((estimated_total_cost, neighbor, current_path + [neighbor], new_cost))

f1 = open(output_file, 'w')
if path:
    f1.write("Path: ")
    for i in range(len(path)):
        f1.write(path[i])
        if i < len(path) - 1:
            f1.write(" -> ")
    f1.write("\n")
    f1.write("Total distance: " + str(distance) + " km\n")
else:
    f1.write("NO PATH FOUND\n")
f1.close()
